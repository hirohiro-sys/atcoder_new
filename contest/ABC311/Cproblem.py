# 整数 N を入力
N = int(input())

# 空白区切りの整数を入力し、先頭に0を追加してリスト A を作成
A = list(map(int, ("0 " + input()).split()))

# 現在の頂点を表す変数 'now' を1で初期化
now = 1

# リスト A の情報を使って 'now' を N 回移動し、サイクルを形成する頂点に到達する
for _ in range(N):
    now = A[now]

# サイクルに属する頂点を格納する空のリスト B を作成
B = []

# サイクルを見つけるため、次の頂点に移動して0に到達するまで繰り返す
while A[now] != 0:
    # 現在の頂点を0に設定し、次の頂点に移動
    A[now], now = 0, A[now]

    # 現在の頂点をリスト B に追加
    B.append(now)

# サイクルの長さ（リスト B の要素数）を出力
print(len(B))

# サイクルに属する頂点をスペースで区切って出力
print(*B)


'''
有向グラフとは辺に方向性があるグラフ
有向閉路とはある頂点から元の頂点に戻ってくる経路のこと
'''
